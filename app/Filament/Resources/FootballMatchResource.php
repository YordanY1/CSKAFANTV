<?php

namespace App\Filament\Resources;

use App\Filament\Resources\FootballMatchResource\Pages;
use App\Models\FootballMatch;
use Filament\Forms;
use Filament\Forms\Form;
use Filament\Resources\Resource;
use Filament\Tables;
use Filament\Tables\Table;
use App\Models\Prediction;
use App\Models\PredictionResult;
use Illuminate\Support\Facades\Log;



class FootballMatchResource extends Resource
{
    protected static ?string $model = FootballMatch::class;

    protected static ?string $navigationIcon = 'heroicon-o-calendar-days';
    protected static ?string $navigationLabel = '–ú–∞—á–æ–≤–µ';
    protected static ?string $navigationGroup = '–§—É—Ç–±–æ–ª';

    public static function form(Form $form): Form
    {
        return $form->schema([
            Forms\Components\Select::make('home_team_id')
                ->label('–î–æ–º–∞–∫–∏–Ω')
                ->relationship('homeTeam', 'name')
                ->required(),

            Forms\Components\Select::make('away_team_id')
                ->label('–ì–æ—Å—Ç')
                ->relationship('awayTeam', 'name')
                ->required(),

            Forms\Components\DateTimePicker::make('match_datetime')
                ->label('–î–∞—Ç–∞ –∏ —á–∞—Å –Ω–∞ –º–∞—á–∞')
                ->seconds(false)
                ->minutesStep(5)
                ->native(false)
                ->displayFormat('d.m.Y H:i')
                ->format('Y-m-d H:i')
                ->timezone('Europe/Sofia')
                ->required()
                ->visible(fn(?FootballMatch $record) => is_null($record)),


            Forms\Components\TextInput::make('stadium')
                ->label('–°—Ç–∞–¥–∏–æ–Ω')
                ->maxLength(255)
                ->nullable(),

            Forms\Components\Fieldset::make('–í–∏–¥–µ–æ —Å–µ–∫—Ü–∏–∏')
                ->schema([

                    Forms\Components\Textarea::make('voice_of_the_fan_embed')
                        ->label('üé§ –ì–ª–∞—Å—ä—Ç –Ω–∞ –§–ï–ù–ê')
                        ->rows(3)
                        ->nullable()
                        ->helperText('–ü–æ—Å—Ç–∞–≤–∏ —Ü–µ–ª–∏—è embed –∫–æ–¥ –æ—Ç YouTube, –Ω–∞–ø—Ä. <iframe ...></iframe>'),

                    Forms\Components\Textarea::make('before_match_embed')
                        ->label('‚è±Ô∏è –ü—Ä–µ–¥–∏ –º–∞—á–∞')
                        ->rows(3)
                        ->nullable()
                        ->helperText('–ü–æ—Å—Ç–∞–≤–∏ —Ü–µ–ª–∏—è embed –∫–æ–¥ –æ—Ç YouTube, –Ω–∞–ø—Ä. <iframe ...></iframe>'),

                    Forms\Components\Textarea::make('talk_show_embed')
                        ->label('üéôÔ∏è CSKA FAN TV TALK SHOW')
                        ->rows(3)
                        ->nullable()
                        ->helperText('–ü–æ—Å—Ç–∞–≤–∏ —Ü–µ–ª–∏—è embed –∫–æ–¥ –æ—Ç YouTube, –Ω–∞–ø—Ä. <iframe ...></iframe>'),

                    Forms\Components\Textarea::make('member_stream_embed')
                        ->label('üîí –°–ø–µ—Ü–∏–∞–ª–Ω–∏ —Å—Ç—Ä–∏–π–º–æ–≤–µ –∑–∞ —á–ª–µ–Ω–æ–≤–µ')
                        ->rows(3)
                        ->nullable()
                        ->helperText('–ü–æ—Å—Ç–∞–≤–∏ —Ü–µ–ª–∏—è embed –∫–æ–¥ –æ—Ç YouTube, –Ω–∞–ø—Ä. <iframe ...></iframe>'),

                    Forms\Components\Textarea::make('celebrity_fans_embed')
                        ->label('‚≠ê –ò–º–µ–Ω–∏—Ç–∏ —á–µ—Ä–≤–µ–Ω–∏ —Ñ–µ–Ω–æ–≤–µ –≥–æ—Å—Ç—É–≤–∞—Ç')
                        ->rows(3)
                        ->nullable()
                        ->helperText('–ü–æ—Å—Ç–∞–≤–∏ —Ü–µ–ª–∏—è embed –∫–æ–¥ –æ—Ç YouTube, –Ω–∞–ø—Ä. <iframe ...></iframe>'),

                    Forms\Components\Textarea::make('legends_speak_embed')
                        ->label('üßì –õ–µ–≥–µ–Ω–¥–∏—Ç–µ –≥–æ–≤–æ—Ä—è—Ç')
                        ->rows(3)
                        ->nullable()
                        ->helperText('–ü–æ—Å—Ç–∞–≤–∏ —Ü–µ–ª–∏—è embed –∫–æ–¥ –æ—Ç YouTube, –Ω–∞–ø—Ä. <iframe ...></iframe>'),

                    Forms\Components\Textarea::make('red_glory_embed')
                        ->label('üèÜ –ß–µ—Ä–≤–µ–Ω–∞ —Å–ª–∞–≤–∞')
                        ->rows(3)
                        ->nullable()
                        ->helperText('–ü–æ—Å—Ç–∞–≤–∏ —Ü–µ–ª–∏—è embed –∫–æ–¥ –æ—Ç YouTube, –Ω–∞–ø—Ä. <iframe ...></iframe>'),

                    Forms\Components\Textarea::make('cska_future_embed')
                        ->label('üå± –ë—ä–¥–µ—â–µ—Ç–æ –Ω–∞ –¶–°–ö–ê')
                        ->rows(3)
                        ->nullable()
                        ->helperText('–ü–æ—Å—Ç–∞–≤–∏ —Ü–µ–ª–∏—è embed –∫–æ–¥ –æ—Ç YouTube, –Ω–∞–ø—Ä. <iframe ...></iframe>'),

                    Forms\Components\Textarea::make('cska_kids_embed')
                        ->label('üë∂ –î–µ—Ü–∞—Ç–∞ –Ω–∞ –¶–°–ö–ê')
                        ->rows(3)
                        ->nullable()
                        ->helperText('–ü–æ—Å—Ç–∞–≤–∏ —Ü–µ–ª–∏—è embed –∫–æ–¥ –æ—Ç YouTube, –Ω–∞–ø—Ä. <iframe ...></iframe>'),

                    Forms\Components\Textarea::make('guest_answers_embed')
                        ->label('üì£ –û—Ç–≥–æ–≤–æ—Ä–∏ –æ—Ç –≥–æ—Å—Ç–∏')
                        ->rows(3)
                        ->nullable()
                        ->helperText('–ü–æ—Å—Ç–∞–≤–∏ —Ü–µ–ª–∏—è embed –∫–æ–¥ –æ—Ç YouTube, –Ω–∞–ø—Ä. <iframe ...></iframe>'),

                    Forms\Components\Textarea::make('preseason_training_embed')
                        ->label('üèãÔ∏è –ü—Ä–µ–¥—Å–µ–∑–æ–Ω–Ω–∞ –ø–æ–¥–≥–æ—Ç–æ–≤–∫–∞')
                        ->rows(3)
                        ->nullable()
                        ->helperText('–ü–æ—Å—Ç–∞–≤–∏ —Ü–µ–ª–∏—è embed –∫–æ–¥ –æ—Ç YouTube, –Ω–∞–ø—Ä. <iframe ...></iframe>'),

                ])
                ->columns(2)
                ->columnSpanFull(),


            Forms\Components\TextInput::make('youtube_url')
                ->label('YouTube –ª–∏–Ω–∫ (–Ω–∞ –∂–∏–≤–æ)')
                ->url()
                ->placeholder('https://www.youtube.com/watch?v=...')
                ->nullable(),


            Forms\Components\TextInput::make('home_score')
                ->label('–ì–æ–ª–æ–≤–µ –Ω–∞ –¥–æ–º–∞–∫–∏–Ω')
                ->numeric()
                ->nullable(),

            Forms\Components\TextInput::make('away_score')
                ->label('–ì–æ–ª–æ–≤–µ –Ω–∞ –≥–æ—Å—Ç')
                ->numeric()
                ->nullable(),
            Forms\Components\Repeater::make('lineup')
                ->label('–°—ä—Å—Ç–∞–≤')
                ->relationship('lineup')
                ->schema([
                    Forms\Components\Select::make('player_id')
                        ->label('–ò–≥—Ä–∞—á')
                        ->relationship('player', 'name')
                        ->searchable()
                        ->preload(),

                    Forms\Components\Toggle::make('is_starter')
                        ->label('–°—Ç–∞—Ä—Ç–æ–≤ —Å—ä—Å—Ç–∞–≤')
                        ->default(true)
                        ->reactive()
                        ->helperText('–ê–∫–æ –µ –∏–∑–∫–ª—é—á–µ–Ω–æ, –∏–≥—Ä–∞—á—ä—Ç —â–µ –±—ä–¥–µ —Å—á–∏—Ç–∞–Ω –∑–∞ —Ä–µ–∑–µ—Ä–≤–∞.'),

                    Forms\Components\Select::make('replaces_player_id')
                        ->label('–ö–æ–≥–æ –∑–∞–º–µ—Å—Ç–≤–∞?')
                        ->options(function () {
                            return \App\Models\Player::pluck('name', 'id')->toArray();
                        })
                        ->searchable()
                        ->preload()
                        ->nullable()
                        ->visible(fn($get) => $get('is_starter') === false)
                        ->helperText('–ò–∑–±–µ—Ä–∏ –∏–≥—Ä–∞—á–∞, –∫–æ–≥–æ—Ç–æ —Ç–æ–∑–∏ –∑–∞–º–µ—Å—Ç–≤–∞.')

                ])
                ->defaultItems(11)
                ->collapsible()
                ->columnSpanFull(),



            Forms\Components\Toggle::make('is_finished')
                ->label('–ü—Ä–∏–∫–ª—é—á–∏–ª –ª–∏ –µ –º–∞—á—ä—Ç?')
                ->default(false)
                ->afterStateUpdated(function ($state, $component, $set, $record) {
                    if ($state && $record->home_score !== null && $record->away_score !== null) {
                        $predictions = Prediction::where('football_match_id', $record->id)->get();

                        foreach ($predictions as $prediction) {
                            $points = 0;

                            $hasPrediction = !is_null($prediction->home_score_prediction) && !is_null($prediction->away_score_prediction);

                            if ($hasPrediction) {
                                $exact = $prediction->home_score_prediction === $record->home_score &&
                                    $prediction->away_score_prediction === $record->away_score;

                                if ($exact) {
                                    $points = 3;
                                } else {
                                    $points = 1;
                                }
                            }

                            PredictionResult::updateOrCreate(
                                ['prediction_id' => $prediction->id],
                                [
                                    'is_correct' => $points === 3,
                                    'points_awarded' => $points,
                                ]
                            );
                        }
                    }
                }),


        ]);
    }

    public static function table(Table $table): Table
    {
        return $table->columns([
            Tables\Columns\TextColumn::make('homeTeam.name')->label('–î–æ–º–∞–∫–∏–Ω')->sortable()->searchable(),
            Tables\Columns\TextColumn::make('awayTeam.name')->label('–ì–æ—Å—Ç')->sortable()->searchable(),
            Tables\Columns\TextColumn::make('match_datetime')->label('–î–∞—Ç–∞ –∏ —á–∞—Å')->dateTime('d.m.Y H:i')->sortable(),
            Tables\Columns\TextColumn::make('stadium')->label('–°—Ç–∞–¥–∏–æ–Ω')->limit(20),
            Tables\Columns\TextColumn::make('home_score')->label('–ì–æ–ª–æ–≤–µ')->numeric(),
            Tables\Columns\TextColumn::make('away_score')->label('-')->numeric(),
            Tables\Columns\IconColumn::make('is_finished')->label('–ü—Ä–∏–∫–ª—é—á–∏–ª')->boolean(),
        ])
            ->defaultSort('match_datetime', 'asc')
            ->actions([
                Tables\Actions\EditAction::make(),
            ])
            ->bulkActions([
                Tables\Actions\DeleteBulkAction::make(),
            ]);
    }

    public static function getPages(): array
    {
        return [
            'index' => Pages\ListFootballMatches::route('/'),
            'create' => Pages\CreateFootballMatch::route('/create'),
            'edit' => Pages\EditFootballMatch::route('/{record}/edit'),
        ];
    }
}
